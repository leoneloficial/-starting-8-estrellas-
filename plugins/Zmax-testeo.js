import fetch from 'node-fetch';
import yts from 'yt-search';

const handler = async (m, { conn, text, usedPrefix, command }) => {
  if (!text) throw "‚ùå *Por favor ingresa el nombre de la m√∫sica que deseas descargar.*";

  const search = await yts(text);
  if (!search.all || search.all.length === 0) {
    throw "‚ö†Ô∏è *No se encontraron resultados para tu b√∫squeda.*";
  }

  const videoInfo = search.all[0];
  const body = `üéµ *Descarga de M√∫sica* üéµ\n\nüìå *T√≠tulo:* ${videoInfo.title}\nüì∫ *Canal:* ${videoInfo.author.name || 'Desconocido'}\nüëÅ *Vistas:* ${videoInfo.views.toLocaleString()}\n‚è≥ *Duraci√≥n:* ${videoInfo.timestamp}\nüìÜ *Publicado hace:* ${videoInfo.ago}\nüîó *Enlace:* ${videoInfo.url}`;

  if (command === 'play' || command === 'play2' || command === 'playvid') {
    await conn.sendMessage(m.chat, {
      image: { url: videoInfo.thumbnail },
      caption: body,
      footer: "üì• *Selecciona una opci√≥n:*",
      buttons: [
        { buttonId: `.yta ${videoInfo.url}`, buttonText: { displayText: 'üéß Descargar MP3' } },
        { buttonId: `.ytv ${videoInfo.url}`, buttonText: { displayText: 'üé¨ Descargar MP4' } },
      ],
      viewOnce: true,
      headerType: 4,
    }, { quoted: m });
    m.react('‚è≥');

  } else if (command === 'yta' || command === 'ytmp3') {
    m.react('‚è≥');
    let audio;
    try {
      console.log(`[INFO] Intentando descargar audio de ${videoInfo.url}`);
      audio = await (await fetch(`https://api.alyachan.dev/api/youtube?url=${videoInfo.url}&type=mp3&apikey=Gata-Dios`)).json();
      console.log("[INFO] Respuesta de la API 1:", audio);
    } catch (error) {
      console.error("[ERROR] Fall√≥ la API 1:", error);
      try {
        audio = await (await fetch(`https://delirius-apiofc.vercel.app/download/ytmp3?url=${videoInfo.url}`)).json();
        console.log("[INFO] Respuesta de la API 2:", audio);
      } catch (error) {
        console.error("[ERROR] Fall√≥ la API 2:", error);
        try {
          audio = await (await fetch(`https://api.vreden.my.id/api/ytmp3?url=${videoInfo.url}`)).json();
          console.log("[INFO] Respuesta de la API 3:", audio);
        } catch (error) {
          console.error("[ERROR] Fall√≥ la API 3:", error);
        }
      }
    }
    
    if (!audio || !audio.data || !audio.data.url) {
      throw "‚ùå *No se pudo obtener el audio. Int√©ntalo m√°s tarde.*";
    }

    console.log("[INFO] Enviando audio...");
    await conn.sendFile(m.chat, audio.data.url, `${videoInfo.title}.mp3`, '', m, null, { mimetype: "audio/mpeg", asDocument: false });
    m.react('‚úÖ');

  } else if (command === 'ytv' || command === 'ytmp4') {
    m.react('‚è≥');
    let video;
    try {
      console.log(`[INFO] Intentando descargar video de ${videoInfo.url}`);
      video = await (await fetch(`https://api.alyachan.dev/api/youtube?url=${videoInfo.url}&type=mp4&apikey=Gata-Dios`)).json();
      console.log("[INFO] Respuesta de la API 1:", video);
    } catch (error) {
      console.error("[ERROR] Fall√≥ la API 1:", error);
      try {
        video = await (await fetch(`https://delirius-apiofc.vercel.app/download/ytmp4?url=${videoInfo.url}`)).json();
        console.log("[INFO] Respuesta de la API 2:", video);
      } catch (error) {
        console.error("[ERROR] Fall√≥ la API 2:", error);
        try {
          video = await (await fetch(`https://api.vreden.my.id/api/ytmp4?url=${videoInfo.url}`)).json();
          console.log("[INFO] Respuesta de la API 3:", video);
        } catch (error) {
          console.error("[ERROR] Fall√≥ la API 3:", error);
        }
      }
    }
    
    if (!video || !video.data || !video.data.url) {
      throw "‚ùå *No se pudo obtener el video. Int√©ntalo m√°s tarde.*";
    }

    console.log("[INFO] Enviando video...");
    await conn.sendMessage(m.chat, {
      video: { url: video.data.url },
      mimetype: "video/mp4",
      caption: "üé¨ *Aqu√≠ est√° tu video:*",
    }, { quoted: m });
    m.react('‚úÖ');

  } else {
    throw "‚ùå *Comando no reconocido.*";
  }
};

handler.help = ['play', 'playvid', 'ytv', 'ytmp4', 'yta', 'play2', 'ytmp3'];
handler.command = ['play', 'playvid', 'ytv', 'ytmp4', 'yta', 'play2', 'ytmp3'];
handler.tags = ['descargas'];
handler.register = true;

export default handler;